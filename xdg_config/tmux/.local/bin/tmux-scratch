#!/usr/bin/env bash
set -euo pipefail

MARKER="__scratch__"

if [ "$#" -eq 1 ] && { [ "$1" = "-h" ] || [ "$1" = "--help" ]; }; then
  echo "Create quick and dirty scratch panes in tmux"
  echo
  echo "Usage: tmux-scratch [MARKER] [COMMAND]"
  echo
  echo "Arguments:"
  echo "[MARKER] Name of the pane to create or move (optional, defaults to $MARKER)"
  echo "[COMMAND] Command to run in the pane (optional)"
  echo
  echo "Flags:"
  echo "-h, --help  Show this help message and exit"
  echo
  echo "Description:"
  echo "Creates a new pane with the given command, or moves an existing pane"
  echo "to the current window if it exists already."
  exit
fi

exec &>/dev/null # Hide output

#–– Configuration & discovery
SESSION="$(tmux display-message -p '#S')"
SRC_IDX="$(tmux display-message -p '#I')"

# –– Parse command line arguments
if [ $# -eq 1 ]; then
  MARKER="$1"
  COMMAND=""
elif [ $# -eq 2 ]; then
  MARKER="$1"
  COMMAND="$2"
fi

#–– Try to locate any pane titled $MARKER, anywhere in this session
#    Output format: "session:window.pane  TITLE"
PANE_INFO=$(
  tmux list-panes -a -F "#{session_name}:#{window_index}.#{pane_index} #{pane_title}" \
  | grep -F "$SESSION" \
  | grep -F "$MARKER" || true
)

LAST_PANE_INDEX=$(tmux list-panes -t "$SESSION:$SRC_IDX" | wc -l)

if [[ -n "$PANE_INFO" ]]; then
  echo "Found helper pane: $PANE_INFO"
  # –– We found our helper pane… let’s parse out its ID and owning window
  PANE_ID="${PANE_INFO%% *}"                          # e.g. "mysession:3.2"
  PANE_WIN="${PANE_ID#*:}"                            # drop session prefix → "3.2"
  WIN_IDX="${PANE_WIN%%.*}"                           # take "3" out of "3.2"

  if (( WIN_IDX == SRC_IDX )); then
    if (( LAST_PANE_INDEX == 1 )); then
      exit
    fi
    echo "It’s in the source window → moving it to target"
    tmux break-pane -d -s "$PANE_ID"                   # pop it out into its own window

    # -- Select the target window for easy access with last-window
    LAST_INDEX=$(tmux list-windows -F "#{window_index}" | sort -n | tail -1)
    tmux select-window -t :"$LAST_INDEX"
    tmux select-window -t "$SESSION:$SRC_IDX"
  else
    echo "It’s somewhere else → moving it back to source"
    # Move the pane to the last position
    tmux move-pane -s "$PANE_ID" -ft "$SESSION:$SRC_IDX.$LAST_PANE_INDEX" -l 20
    echo "Selecting window"
    tmux select-window -t "$SESSION:$SRC_IDX"
  fi

else
  echo "No helper pane found"
  if [ $# -eq 2 ]; then
    echo "Creating new pane with command: $@"
    NEW_PANE=$(tmux split-window -P -F '#{pane_id}' -ft "$SESSION:$SRC_IDX.$LAST_PANE_INDEX" -l 20 "$COMMAND")
  else
    echo "Creating new pane"
    NEW_PANE=$(tmux split-window -P -F '#{pane_id}' -ft "$SESSION:$SRC_IDX.$LAST_PANE_INDEX" -l 20)
  fi
  tmux select-pane -t "$NEW_PANE"
  tmux select-pane -T "$MARKER"
fi

