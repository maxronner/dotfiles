_show_preview='
if [[ -d {} ]]; then
    eza --tree --color=always {} | head -200
elif file --mime-type {} | grep -qF image; then
    chafa --size 30 --passthrough none -d 2 {}
elif file --mime-type {} | grep -aF -e text -e json; then
    bat --color=always --style=numbers,grid --line-range :500 {};
else
    bat -n --color=always --line-range :500 {}
fi
'

if [ -f "$XDG_CONFIG_HOME/fzf/profile.sh" ]; then
  source "$XDG_CONFIG_HOME/fzf/profile.sh"
else
  export FZF_COLOR_OPTS="
      --color=fg:#908caa,bg:#232136,hl:#ea9a97
      --color=fg+:#e0def4,bg+:#393552,hl+:#ea9a97
      --color=border:#44415a,header:#3e8fb0,gutter:#232136
      --color=spinner:#f6c177,info:#9ccfd8
      --color=pointer:#c4a7e7,marker:#eb6f92,prompt:#908caa"
fi

export FZF_BIND_OPTS="
    --bind 'ctrl-y:execute-silent(printf {} | cut -f 2- | wl-copy --trim-newline),ctrl-d:preview-page-down,ctrl-u:preview-page-up,ctrl-y:preview-up,ctrl-e:preview-down,ctrl-b:preview-page-up,ctrl-f:preview-page-down,ctrl-u:preview-half-page-up,ctrl-d:preview-half-page-down,shift-up:preview-top,shift-down:preview-bottom,alt-up:half-page-up,alt-down:half-page-down'"
export FZF_DEFAULT_OPTS="$FZF_COLOR_OPTS $FZF_BIND_OPTS"
export FZF_TMUX_PANE_OPTS="bottom,40%,border-native"
export FZF_DEFAULT_COMMAND='fd --type f --strip-cwd-prefix --hidden --follow --exclude .git'

export FZF_CTRL_T_COMMAND="${FZF_DEFAULT_COMMAND/--type f/}"
export FZF_ALT_C_COMMAND="${FZF_DEFAULT_COMMAND/--type f/--type d}"
export FZF_CTRL_T_OPTS="--preview '$_show_preview'"
export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"

[ -f "$XDG_CONFIG_HOME/fzf/scripts/fzf-git.sh" ] && \
    source "$XDG_CONFIG_HOME/fzf/scripts/fzf-git.sh"

# Load keybindings & completions per shell
case "$SHELL" in
    */bash)
        source /usr/share/fzf/key-bindings.bash
        ;;
    */zsh)
        source /usr/share/fzf/key-bindings.zsh
        source /usr/share/fzf/completion.zsh
        bindkey -s '^N' "fzf-nvim\n"
        bindkey -s '^S' "fzf-rg\n"
        bindkey -s '^G' "fat\n"
        ;;
    *)
        echo "Unsupported shell for FZF: $SHELL"
        ;;
esac

fat() {
    fzf -q "$1" --select-1 --exit-0 --preview='bat -n --color=always --line-range :500 {}' --bind 'enter:become(bat {+})'
}

# Find in manual
fman() {
    man -k . | fzf -q "$1" --prompt='man> ' --preview $'echo {} | tr -d \'()\' | awk \'{printf "%s ", $2} {print $1}\' | xargs -r man | col -bx | bat -l man -p --color always' | tr -d '()' | awk '{printf "%s ", $2} {print $1}' | xargs -r man
}

# Install packages using yay (change to pacman/AUR helper of your choice)
ins() {
    yay -Slq | fzf -q "$1" -m --preview 'yay -Si {1}'| xargs -ro yay -S
}
# Remove installed packages (change to pacman/AUR helper of your choice)
rem() {
    yay -Qq | fzf -q "$1" -m --preview 'yay -Qi {1}' | xargs -ro yay -Rns
}

# Open nvim with fzf
fzf-nvim() {
    fzf --tmux "$FZF_TMUX_PANE_OPTS" --prompt='nvim> ' --multi --bind 'enter:become(nvim {+})'
}

# Ripgrep current directory with fzf
fzf-rg() {
    RG_PREFIX="rg --column --line-number --no-heading --color=always --smart-case "
    INITIAL_QUERY="${*:-}"
    fzf --tmux "$FZF_TMUX_PANE_OPTS" \
        --ansi --disabled --query "$INITIAL_QUERY" \
        --bind "start:reload:$RG_PREFIX {q}" \
        --bind "change:reload:sleep 0.1; $RG_PREFIX {q} || true" \
        --delimiter : \
        --preview 'bat --color=always {1} --highlight-line {2}' \
        --preview-window 'up,60%,border-bottom,+{2}+3/3,~3' \
        --bind 'enter:become(nvim {1} +{2})'
    }

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
_fzf_comprun() {
    echo "Command: $command" >&2  # Debug output
    local command=$1
    shift

    case "$command" in
        cd)           fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
        export|unset) fzf --preview "eval 'echo \${}'"                         "$@" ;;
        ssh)          fzf --preview 'dig {}'                                   "$@" ;;
        *)            fzf --preview "$_show_preview"                           "$@" ;;
    esac
}

# Use fd (https://github.com/sharkdp/fd) for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
    fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
    fd --type d --hidden --follow --exclude ".git" . "$1"
}
